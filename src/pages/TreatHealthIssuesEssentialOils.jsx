import React, { useState, useRef } from 'react';
import ScrollToTop from '../components/ScrollToTop';
import { useLanguage } from '../contexts/LanguageContext';
import { useCountry } from '../contexts/CountryContext';

import  { EssOilRecipe_Burn_EN,
    EssOilRecipe_BeeStings_EN, 
    EssOilRecipe_MusclePain_EN, 
    EssOilRecipe_Sprains_EN, 
    EssOilRecipe_Nausea_EN,
    EssOilRecipe_ChestCongestion_EN,
    EssOilRecipe_ColdSores_EN,
    EssOilRecipe_Headache_EN,
    EssOilRecipe_JetLagHangover_EN,
    EssOilRecipe_PineColdFlu_EN
} from '../components/EssOilsHealingRecipes';
import  { EssOilRecipe_Burn_DE,
    EssOilRecipe_BeeStings_DE, 
    EssOilRecipe_MusclePain_DE, 
    EssOilRecipe_Sprains_DE, 
    EssOilRecipe_Nausea_DE,
    EssOilRecipe_ChestCongestion_DE,
    EssOilRecipe_ColdSores_DE,
    EssOilRecipe_Headache_DE,
    EssOilRecipe_JetLagHangover_DE,
    EssOilRecipe_PineColdFlu_DE
} from '../components/EssOilsHealingRecipes_DE';
import  { EssOilRecipe_Burn_RO,
    EssOilRecipe_BeeStings_RO, 
    EssOilRecipe_MusclePain_RO, 
    EssOilRecipe_Sprains_RO, 
    EssOilRecipe_Nausea_RO,
    EssOilRecipe_ChestCongestion_RO,
    EssOilRecipe_ColdSores_RO,
    EssOilRecipe_Headache_RO,
    EssOilRecipe_JetLagHangover_RO,
    EssOilRecipe_PineColdFlu_RO
} from '../components/EssOilsHealingRecipes_RO';

function TreatHealthIssuesEssentialOils() {
    const { currentLanguage: langFromContext } = useLanguage();
    const currentLanguage = langFromContext || 'en';
    const { 
        userLocation, 
        locationLoading, 
        getLocalizedCurrency, 
        getLocationWelcomeMessage,
        convertTemperature,
        convertVolume,
        convertWeight
    } = useCountry();
    
    const [searchTerm, setSearchTerm] = useState('');
    
    // Create refs for each recipe component
    const burnRecipeRef = useRef(null);
    const beeStingRecipeRef = useRef(null);
    const musclePainRecipeRef = useRef(null);
    const sprainsRecipeRef = useRef(null);
    const nauseaRecipeRef = useRef(null);
    const chestCongestionRecipeRef = useRef(null);
    const coldSoresRecipeRef = useRef(null);
    const headacheRecipeRef = useRef(null);
    const jetLagHangoverRecipeRef = useRef(null);
    const pineColdFluRecipeRef = useRef(null);
    
    // Translation object with location welcome messages
    const translations = {
        en: {
            pageTitle: 'Essential Oil Healing Recipes',
            pageDescription: 'Discover proven recipes using essential oils to treat various health conditions naturally. Each recipe includes precise measurements, clear instructions, and shopping cart integration.',
            findRecipe: 'üîç Find Your Recipe',
            searchPlaceholder: 'Search recipes by condition, ingredient, or keyword...',
            quickJump: 'Quick Jump to Recipe:',
            noRecipesFound: 'No recipes found matching',
            searchSuggestion: 'Try searching for conditions like "pain", "nausea", or ingredients like "lavender".',
            recipesAvailable: 'üåø 10 Essential Oil Healing Recipes Available!',
            recipesDescription: 'We now offer 10 comprehensive essential oil recipes for various health conditions. Each recipe includes detailed instructions, ingredient shopping lists, unit conversions, and safety guidelines.',
            currentCollection: 'Current Recipe Collection:',
            recipeFeatures: 'Recipe Features:',
            unitConversion: 'üìè Unit Conversion',
            shoppingIntegration: 'üõí Shopping Integration',
            academicSources: 'üìö Academic Sources',
            safetyGuidelines: '‚öïÔ∏è Safety Guidelines',
            safetyNote: 'Safety Note',
            safetyText: 'Always perform a patch test before using any new essential oil blend. Consult with a healthcare professional before using essential oils for medical conditions. Essential oils are not intended to diagnose, treat, cure, or prevent any disease.',
            currency: getLocalizedCurrency(),
            cartAlert: 'Items added to cart:\n\n{items}\n\nTotal: {currency}{total}\n\nNote: This is a demo. In a real implementation, these would be added to your shopping cart system.',
            locationWelcome: {
                usa: 'Welcome! Recipes are shown in Imperial units (¬∞F, fl oz, oz) with prices in USD.',
                europe: 'Welcome! Recipes are shown in Metric units (¬∞C, ml, g) with prices in EUR.',
                international: 'Welcome from {country}! Recipes are shown in Metric units with international pricing.',
                unknown: 'Welcome! Default units and pricing are applied.'
            },
            recipes: {
                burn: {
                    title: 'Lavender Burn Ointment',
                    description: 'Healing salve for burns, cuts, and skin irritations',
                    shortDesc: 'Healing salve for burns & cuts'
                },
                beeStings: {
                    title: 'Bee Sting Relief Blend',
                    description: 'Fast-acting relief for bee stings and insect bites',
                    shortDesc: 'Fast-acting sting relief blend'
                },
                musclePain: {
                    title: 'Muscle Pain & Stiff Joints Bath Salts',
                    description: 'Therapeutic bath salts for muscle pain and joint stiffness',
                    shortDesc: 'Therapeutic bath salts'
                },
                sprains: {
                    title: 'Sprains & Strains Compress',
                    description: 'Healing compress for sprains, strains, and injuries',
                    shortDesc: 'Healing compress for injuries'
                },
                nausea: {
                    title: 'Nausea Relief Inhaler',
                    description: 'Portable inhaler for nausea and motion sickness',
                    shortDesc: 'Portable nausea relief'
                },
                chestCongestion: {
                    title: 'Chest Congestion Steam Inhalation',
                    description: 'Steam inhalation for chest congestion from colds and coughs',
                    shortDesc: 'Steam inhalation for colds'
                },
                coldSores: {
                    title: 'Cold Sores Relief Blend',
                    description: 'Antiviral blend to ease cold sores',
                    shortDesc: 'Antiviral healing blend'
                },
                headache: {
                    title: 'Headache Relief Diffuser Blend',
                    description: 'Diffuser blend to relieve headaches naturally',
                    shortDesc: 'Diffuser blend for pain'
                },
                jetLag: {
                    title: 'Jet Lag & Hangover Relief Blend',
                    description: 'Energizing blend to alleviate jet lag and hangover symptoms',
                    shortDesc: 'Energizing recovery blend'
                },
                pineCold: {
                    title: 'Pine Cold & Flu Relief Inhaler',
                    description: 'Antiseptic inhaler for cold and flu season sinus relief',
                    shortDesc: 'Antiseptic inhaler for flu season'
                }
            }
        },
        de: {
            pageTitle: '√Ñtherische √ñle Heilrezepte',
            pageDescription: 'Entdecken Sie bew√§hrte Rezepte mit √§therischen √ñlen zur nat√ºrlichen Behandlung verschiedener Gesundheitszust√§nde. Jedes Rezept enth√§lt pr√§zise Mengenangaben, klare Anweisungen und Warenkorb-Integration.',
            findRecipe: 'üîç Finden Sie Ihr Rezept',
            searchPlaceholder: 'Rezepte nach Beschwerden, Zutaten oder Stichw√∂rtern suchen...',
            quickJump: 'Schnell zum Rezept springen:',
            noRecipesFound: 'Keine Rezepte gefunden f√ºr',
            searchSuggestion: 'Versuchen Sie die Suche nach Beschwerden wie "Schmerz", "√úbelkeit" oder Zutaten wie "Lavendel".',
            recipesAvailable: 'üåø 10 √Ñtherische √ñle Heilrezepte verf√ºgbar!',
            recipesDescription: 'Wir bieten jetzt 10 umfassende Rezepte mit √§therischen √ñlen f√ºr verschiedene Gesundheitszust√§nde. Jedes Rezept enth√§lt detaillierte Anweisungen, Zutateneinkaufslisten, Einheitenumrechnungen und Sicherheitsrichtlinien.',
            currentCollection: 'Aktuelle Rezeptsammlung:',
            recipeFeatures: 'Rezept-Funktionen:',
            unitConversion: 'üìè Einheitenumrechnung',
            shoppingIntegration: 'üõí Einkaufs-Integration',
            academicSources: 'üìö Wissenschaftliche Quellen',
            safetyGuidelines: '‚öïÔ∏è Sicherheitsrichtlinien',
            safetyNote: 'Sicherheitshinweis',
            safetyText: 'F√ºhren Sie immer einen Hauttest durch, bevor Sie eine neue Mischung aus √§therischen √ñlen verwenden. Konsultieren Sie einen Arzt, bevor Sie √§therische √ñle bei medizinischen Beschwerden verwenden. √Ñtherische √ñle sind nicht dazu bestimmt, Krankheiten zu diagnostizieren, zu behandeln, zu heilen oder zu verhindern.',
            currency: getLocalizedCurrency(),
            cartAlert: 'Artikel zum Warenkorb hinzugef√ºgt:\n\n{items}\n\nGesamt: {total}{currency}\n\nHinweis: Dies ist eine Demo. In einer echten Implementierung w√ºrden diese Artikel zu Ihrem Warenkorbsystem hinzugef√ºgt.',
            locationWelcome: {
                usa: 'Willkommen! Rezepte werden in imperialen Einheiten (¬∞F, fl oz, oz) mit Preisen in USD angezeigt.',
                europe: 'Willkommen! Rezepte werden in metrischen Einheiten (¬∞C, ml, g) mit Preisen in EUR angezeigt.',
                international: 'Willkommen aus {country}! Rezepte werden in metrischen Einheiten mit internationalen Preisen angezeigt.',
                unknown: 'Willkommen! Standard-Einheiten und -Preise werden angewendet.'
            },
            recipes: {
                burn: {
                    title: 'Lavendel Brandwunden-Salbe',
                    description: 'Heilsalbe f√ºr Verbrennungen, Schnitte und Hautreizungen',
                    shortDesc: 'Heilsalbe f√ºr Verbrennungen & Schnitte'
                },
                beeStings: {
                    title: 'Bienenstich-Linderung Mischung',
                    description: 'Schnell wirkende Linderung bei Bienenstichen und Insektenstichen',
                    shortDesc: 'Schnell wirkende Stich-Linderung'
                },
                musclePain: {
                    title: 'Muskelschmerzen & Steife Gelenke Badesalz',
                    description: 'Therapeutisches Badesalz f√ºr Muskelschmerzen und Gelenksteifheit',
                    shortDesc: 'Therapeutisches Badesalz'
                },
                sprains: {
                    title: 'Verstauchungen & Zerrungen Kompresse',
                    description: 'Heilkompresse f√ºr Verstauchungen, Zerrungen und Verletzungen',
                    shortDesc: 'Heilkompresse f√ºr Verletzungen'
                },
                nausea: {
                    title: '√úbelkeit-Linderung Inhalator',
                    description: 'Tragbarer Inhalator gegen √úbelkeit und Reisekrankheit',
                    shortDesc: 'Tragbare √úbelkeit-Linderung'
                },
                chestCongestion: {
                    title: 'Brustverengung Dampf-Inhalation',
                    description: 'Dampfinhalation bei Brustverengung durch Erk√§ltungen und Husten',
                    shortDesc: 'Dampfinhalation bei Erk√§ltungen'
                },
                coldSores: {
                    title: 'Fieberbl√§schen-Linderung Mischung',
                    description: 'Antivirale Mischung zur Linderung von Fieberbl√§schen',
                    shortDesc: 'Antivirale Heilmischung'
                },
                headache: {
                    title: 'Kopfschmerz-Linderung Diffuser-Mischung',
                    description: 'Diffuser-Mischung zur nat√ºrlichen Linderung von Kopfschmerzen',
                    shortDesc: 'Diffuser-Mischung gegen Schmerzen'
                },
                jetLag: {
                    title: 'Jetlag & Kater-Linderung Mischung',
                    description: 'Energiespendende Mischung zur Linderung von Jetlag und Kater-Symptomen',
                    shortDesc: 'Energiespendende Erholungsmischung'
                },
                pineCold: {
                    title: 'Kiefer Erk√§ltung & Grippe Inhalator',
                    description: 'Antiseptischer Inhalator f√ºr Nebenh√∂hlen-Linderung in der Erk√§ltungs- und Grippesaison',
                    shortDesc: 'Antiseptischer Inhalator f√ºr die Grippesaison'
                }
            }
        },
        ro: {
            pageTitle: 'Re»õete de Vindecare cu Uleiuri Esen»õiale',
            pageDescription: 'DescoperƒÉ re»õete dovedite folosind uleiuri esen»õiale pentru tratarea naturalƒÉ a diferitelor afec»õiuni de sƒÉnƒÉtate. Fiecare re»õetƒÉ include mƒÉsurƒÉtori precise, instruc»õiuni clare »ôi integrare cu co»ôul de cumpƒÉrƒÉturi.',
            findRecipe: 'üîç GƒÉse»ôte-»õi Re»õeta',
            searchPlaceholder: 'CautƒÉ re»õete dupƒÉ afec»õiune, ingredient sau cuv√¢nt cheie...',
            quickJump: 'Salt rapid la re»õetƒÉ:',
            noRecipesFound: 'Nu s-au gƒÉsit re»õete pentru',
            searchSuggestion: '√éncearcƒÉ sƒÉ cau»õi afec»õiuni precum "durere", "grea»õƒÉ" sau ingrediente precum "lavandƒÉ".',
            recipesAvailable: 'üåø 10 Re»õete de Vindecare cu Uleiuri Esen»õiale disponibile!',
            recipesDescription: 'Oferim acum 10 re»õete cuprinzƒÉtoare cu uleiuri esen»õiale pentru diverse afec»õiuni de sƒÉnƒÉtate. Fiecare re»õetƒÉ include instruc»õiuni detaliate, liste de cumpƒÉrƒÉturi pentru ingrediente, conversii de unitƒÉ»õi »ôi √ÆndrumƒÉri de siguran»õƒÉ.',
            currentCollection: 'Colec»õia ActualƒÉ de Re»õete:',
            recipeFeatures: 'Caracteristicile Re»õetelor:',
            unitConversion: 'üìè Conversii de UnitƒÉ»õi',
            shoppingIntegration: 'üõí Integrare CumpƒÉrƒÉturi',
            academicSources: 'üìö Surse Academice',
            safetyGuidelines: '‚öïÔ∏è √éndrumƒÉri de Siguran»õƒÉ',
            safetyNote: 'NotƒÉ de Siguran»õƒÉ',
            safetyText: 'EfectueazƒÉ √Æntotdeauna un test pe o suprafa»õƒÉ micƒÉ √Ænainte de a folosi orice nouƒÉ combina»õie de uleiuri esen»õiale. ConsultƒÉ un profesionist din domeniul sƒÉnƒÉtƒÉ»õii √Ænainte de a folosi uleiuri esen»õiale pentru afec»õiuni medicale. Uleiurile esen»õiale nu sunt destinate sƒÉ diagnosticheze, sƒÉ trateze, sƒÉ vindece sau sƒÉ previnƒÉ vreo boalƒÉ.',
            currency: getLocalizedCurrency(),
            cartAlert: 'Articole adƒÉugate √Æn co»ô:\n\n{items}\n\nTotal: {total}{currency}\n\nNotƒÉ: Aceasta este o demonstra»õie. √éntr-o implementare realƒÉ, aceste articole ar fi adƒÉugate √Æn sistemul dvs. de co»ô de cumpƒÉrƒÉturi.',
            locationWelcome: {
                usa: 'Bun venit! Re»õetele sunt afi»ôate √Æn unitƒÉ»õi imperiale (¬∞F, fl oz, oz) cu pre»õuri √Æn USD.',
                europe: 'Bun venit! Re»õetele sunt afi»ôate √Æn unitƒÉ»õi metrice (¬∞C, ml, g) cu pre»õuri √Æn EUR.',
                international: 'Bun venit din {country}! Re»õetele sunt afi»ôate √Æn unitƒÉ»õi metrice cu pre»õuri interna»õionale.',
                unknown: 'Bun venit! Se aplicƒÉ unitƒÉ»õi »ôi pre»õuri implicite.'
            },
            recipes: {
                burn: {
                    title: 'Unguent cu LavandƒÉ pentru Arsuri',
                    description: 'Balsam vindecƒÉtor pentru arsuri, tƒÉieturi »ôi irita»õii ale pielii',
                    shortDesc: 'Balsam vindecƒÉtor pentru arsuri »ôi tƒÉieturi'
                },
                beeStings: {
                    title: 'Amestec pentru √én»õepƒÉturile de AlbinƒÉ',
                    description: 'Alinare cu ac»õiune rapidƒÉ pentru √Æn»õepƒÉturile de albinƒÉ »ôi mu»ôcƒÉturile de insecte',
                    shortDesc: 'Alinare cu ac»õiune rapidƒÉ pentru √Æn»õepƒÉturi'
                },
                musclePain: {
                    title: 'SƒÉruri de Baie pentru Durerile Musculare »ôi Articula»õiile Rigide',
                    description: 'SƒÉruri de baie terapeutice pentru durerile musculare »ôi rigiditatea articula»õiilor',
                    shortDesc: 'SƒÉruri de baie terapeutice'
                },
                sprains: {
                    title: 'Comprese pentru Entorse »ôi √éntinderi',
                    description: 'CompresƒÉ vindecƒÉtoare pentru entorse, √Æntinderi »ôi vƒÉtƒÉmƒÉri',
                    shortDesc: 'CompresƒÉ vindecƒÉtoare pentru vƒÉtƒÉmƒÉri'
                },
                nausea: {
                    title: 'Inhalator pentru Alinarea Gre»õii',
                    description: 'Inhalator portabil pentru grea»õƒÉ »ôi rƒÉu de mi»ôcare',
                    shortDesc: 'Alinare portabilƒÉ pentru grea»õƒÉ'
                },
                chestCongestion: {
                    title: 'Inhala»õie cu Aburi pentru Congestia ToracicƒÉ',
                    description: 'Inhala»õie cu aburi pentru congestia toracicƒÉ de la rƒÉceli »ôi tuse',
                    shortDesc: 'Inhala»õia cu aburi pentru rƒÉceli'
                },
                coldSores: {
                    title: 'Amestec pentru Alinarea Afetelor',
                    description: 'Amestec antiviral pentru alinarea afetelor',
                    shortDesc: 'Amestec antiviral vindecƒÉtor'
                },
                headache: {
                    title: 'Amestec Difuzor pentru Alinarea Durerilor de Cap',
                    description: 'Amestec pentru difuzor pentru alinarea naturalƒÉ a durerilor de cap',
                    shortDesc: 'Amestec difuzor pentru durere'
                },
                jetLag: {
                    title: 'Amestec pentru Alinarea Jetlag-ului »ôi Mahmureala',
                    description: 'Amestec energizant pentru alinarea simptomelor de jetlag »ôi mahmurealƒÉ',
                    shortDesc: 'Amestec energizant de recuperare'
                },
                pineCold: {
                    title: 'Inhalator cu Pin pentru RƒÉcealƒÉ »ôi GripƒÉ',
                    description: 'Inhalator antiseptic pentru alinarea sinusurilor √Æn sezonul de rƒÉcealƒÉ »ôi gripƒÉ',
                    shortDesc: 'Inhalator antiseptic pentru sezonul gripei'
                }
            }
        }
    };

    const t = translations[currentLanguage] || translations['en'];

    // Get recipe components based on language
    const getRecipeComponents = () => {
        console.log(currentLanguage);
        switch(currentLanguage) {
            case 'de':
                return {
                    Burn: EssOilRecipe_Burn_DE,
                    BeeStings: EssOilRecipe_BeeStings_DE,
                    MusclePain: EssOilRecipe_MusclePain_DE,
                    Sprains: EssOilRecipe_Sprains_DE,
                    Nausea: EssOilRecipe_Nausea_DE,
                    ChestCongestion: EssOilRecipe_ChestCongestion_DE,
                    ColdSores: EssOilRecipe_ColdSores_DE,
                    Headache: EssOilRecipe_Headache_DE,
                    JetLagHangover: EssOilRecipe_JetLagHangover_DE,
                    PineColdFlu: EssOilRecipe_PineColdFlu_DE
                };
            case 'ro':
                return {
                    Burn: EssOilRecipe_Burn_RO,
                    BeeStings: EssOilRecipe_BeeStings_RO,
                    MusclePain: EssOilRecipe_MusclePain_RO,
                    Sprains: EssOilRecipe_Sprains_RO,
                    Nausea: EssOilRecipe_Nausea_RO,
                    ChestCongestion: EssOilRecipe_ChestCongestion_RO,
                    ColdSores: EssOilRecipe_ColdSores_RO,
                    Headache: EssOilRecipe_Headache_RO,
                    JetLagHangover: EssOilRecipe_JetLagHangover_RO,
                    PineColdFlu: EssOilRecipe_PineColdFlu_RO
                };
            case 'en':
                return {
                    Burn: EssOilRecipe_Burn_EN,
                    BeeStings: EssOilRecipe_BeeStings_EN,
                    MusclePain: EssOilRecipe_MusclePain_EN,
                    Sprains: EssOilRecipe_Sprains_EN,
                    Nausea: EssOilRecipe_Nausea_EN,
                    ChestCongestion: EssOilRecipe_ChestCongestion_EN,
                    ColdSores: EssOilRecipe_ColdSores_EN,
                    Headache: EssOilRecipe_Headache_EN,
                    JetLagHangover: EssOilRecipe_JetLagHangover_EN,
                    PineColdFlu: EssOilRecipe_PineColdFlu_EN
                };
        }
    };

    const RecipeComponents = getRecipeComponents();
    
    // Recipe data for navigation and search
    const recipes = [
        {
            id: 'burn',
            title: t.recipes.burn.title,
            icon: 'üî•',
            description: t.recipes.burn.description,
            keywords: currentLanguage === 'de' ? 
                ['verbrennung', 'salbe', 'heilung', 'schnitte', 'haut', 'lavendel', 'bienenwachs'] :
                currentLanguage === 'ro' ?
                ['arsurƒÉ', 'unguent', 'vindecare', 'tƒÉieturi', 'piele', 'lavandƒÉ', 'cearƒÉ', 'balsam'] :
                ['burn', 'ointment', 'healing', 'cuts', 'skin', 'lavender', 'beeswax', 'salve'],
            ref: burnRecipeRef
        },
        {
            id: 'bee-sting',
            title: t.recipes.beeStings.title,
            icon: 'üêù',
            description: t.recipes.beeStings.description,
            keywords: currentLanguage === 'de' ? 
                ['biene', 'stich', 'linderung', 'eukalyptus', 'lavendel', 'schmerz', 'schwellung'] :
                currentLanguage === 'ro' ?
                ['albinƒÉ', '√Æn»õepƒÉturƒÉ', 'alinare', 'eucalipt', 'lavandƒÉ', 'durere', 'umflƒÉturƒÉ'] :
                ['bee', 'sting', 'relief', 'eucalyptus', 'lavender', 'pain', 'swelling'],
            ref: beeStingRecipeRef
        },
        {
            id: 'muscle-pain',
            title: t.recipes.musclePain.title,
            icon: 'üí™',
            description: t.recipes.musclePain.description,
            keywords: currentLanguage === 'de' ? 
                ['muskel', 'schmerz', 'gelenke', 'bad', 'salz', 'kamille', 'koriander', 'epsom'] :
                currentLanguage === 'ro' ?
                ['mu»ôchi', 'durere', 'articula»õii', 'baie', 'sƒÉruri', 'mu»ôe»õel', 'coriandru', 'epsom'] :
                ['muscle', 'pain', 'joints', 'bath', 'salts', 'chamomile', 'coriander', 'epsom'],
            ref: musclePainRecipeRef
        },
        {
            id: 'sprains',
            title: t.recipes.sprains.title,
            icon: 'ü§ï',
            description: t.recipes.sprains.description,
            keywords: currentLanguage === 'de' ? 
                ['verstauchung', 'zerrung', 'kompresse', 'rosmarin', 'lavendel', 'verletzung', 'entz√ºndung'] :
                currentLanguage === 'ro' ?
                ['entorse', '√Æntinderi', 'compresƒÉ', 'rozmarin', 'lavandƒÉ', 'vƒÉtƒÉmare', 'inflama»õie'] :
                ['sprains', 'strains', 'compress', 'rosemary', 'lavender', 'injury', 'inflammation'],
            ref: sprainsRecipeRef
        },
        {
            id: 'nausea',
            title: t.recipes.nausea.title,
            icon: 'ü§¢',
            description: t.recipes.nausea.description,
            keywords: currentLanguage === 'de' ? 
                ['√ºbelkeit', 'inhalator', 'reise', 'krankheit', 'pfefferminze', 'lavendel', 'tragbar'] :
                currentLanguage === 'ro' ?
                ['grea»õƒÉ', 'inhalator', 'mi»ôcare', 'boalƒÉ', 'mentƒÉ', 'lavandƒÉ', 'portabil'] :
                ['nausea', 'inhaler', 'motion', 'sickness', 'peppermint', 'lavender', 'portable'],
            ref: nauseaRecipeRef
        },
        {
            id: 'chest-congestion',
            title: t.recipes.chestCongestion.title,
            icon: 'ü´Å',
            description: t.recipes.chestCongestion.description,
            keywords: currentLanguage === 'de' ? 
                ['brust', 'verengung', 'dampf', 'inhalation', 'zitrone', 'eukalyptus', 'zypresse', 'erk√§ltung', 'husten'] :
                currentLanguage === 'ro' ?
                ['piept', 'congestie', 'aburi', 'inhala»õie', 'lƒÉm√¢ie', 'eucalipt', 'chiparos', 'rƒÉcealƒÉ', 'tuse'] :
                ['chest', 'congestion', 'steam', 'inhalation', 'lemon', 'eucalyptus', 'cypress', 'cold', 'cough'],
            ref: chestCongestionRecipeRef
        },
        {
            id: 'cold-sores',
            title: t.recipes.coldSores.title,
            icon: 'üíã',
            description: t.recipes.coldSores.description,
            keywords: currentLanguage === 'de' ? 
                ['fieberbl√§schen', 'antiviral', 'zitrone', 'manuka', 'heilung', 'lippe'] :
                currentLanguage === 'ro' ?
                ['afete', 'antiviral', 'lƒÉm√¢ie', 'manuka', 'vindecare', 'buzƒÉ'] :
                ['cold', 'sores', 'antiviral', 'lemon', 'manuka', 'healing', 'lip'],
            ref: coldSoresRecipeRef
        },
        {
            id: 'headache',
            title: t.recipes.headache.title,
            icon: 'ü§ï',
            description: t.recipes.headache.description,
            keywords: currentLanguage === 'de' ? 
                ['kopfschmerz', 'diffuser', 'zitrone', 'lavendel', 'pfefferminze', 'spannung', 'schmerz'] :
                currentLanguage === 'ro' ?
                ['durere', 'cap', 'difuzor', 'lƒÉm√¢ie', 'lavandƒÉ', 'mentƒÉ', 'tensiune', 'durere'] :
                ['headache', 'diffuser', 'lemon', 'lavender', 'peppermint', 'tension', 'pain'],
            ref: headacheRecipeRef
        },
        {
            id: 'jet-lag-hangover',
            title: t.recipes.jetLag.title,
            icon: '‚úàÔ∏è',
            description: t.recipes.jetLag.description,
            keywords: currentLanguage === 'de' ? 
                ['jetlag', 'kater', 'zitrone', 'ingwer', 'energie', 'erholung', 'reise'] :
                currentLanguage === 'ro' ?
                ['jetlag', 'mahmurealƒÉ', 'lƒÉm√¢ie', 'ghimbir', 'energie', 'recuperare', 'cƒÉlƒÉtorie'] :
                ['jet', 'lag', 'hangover', 'lemon', 'ginger', 'energy', 'recovery', 'travel'],
            ref: jetLagHangoverRecipeRef
        },
        {
            id: 'pine-cold-flu',
            title: t.recipes.pineCold.title,
            icon: 'üå≤',
            description: t.recipes.pineCold.description,
            keywords: currentLanguage === 'de' ? 
                ['kiefer', 'erk√§ltung', 'grippe', 'inhalator', 'antiseptisch', 'eukalyptus', 'lorbeer', 'nebenh√∂hlen', 'verengung', 'antibakteriell'] :
                currentLanguage === 'ro' ?
                ['pin', 'rƒÉcealƒÉ', 'gripƒÉ', 'inhalator', 'antiseptic', 'eucalipt', 'dafin', 'sinusuri', 'congestie', 'antibacterian'] :
                ['pine', 'cold', 'flu', 'inhaler', 'antiseptic', 'eucalyptus', 'bay laurel', 'sinus', 'congestion', 'antibacterial'],
            ref: pineColdFluRecipeRef
        }
    ];
    
    // Filter recipes based on search term
    const filteredRecipes = recipes.filter(recipe => 
        recipe.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        recipe.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
        recipe.keywords.some(keyword => keyword.toLowerCase().includes(searchTerm.toLowerCase()))
    );
    
    // Scroll to recipe function
    const scrollToRecipe = (recipeRef) => {
        if (recipeRef.current) {
            recipeRef.current.scrollIntoView({ 
                behavior: 'smooth', 
                block: 'start',
                inline: 'nearest'
            });
        }
    };

    
    // Handler for adding items to shopping cart
    const handleAddToCart = (cartItems) => {
        console.log('Adding items to cart:', cartItems);
        
        const itemNames = cartItems.map(item => `${item.name} (${t.currency === ' lei' ? item.price + t.currency : t.currency + item.price})`).join('\n');
        const totalCost = cartItems.reduce((sum, item) => sum + item.price, 0).toFixed(2);
        
        const alertMessage = t.cartAlert
            .replace('{items}', itemNames)
            .replace('{total}', totalCost)
            .replace('{currency}', t.currency);
        
        alert(alertMessage);
    };

    
    return (
        <div className="page-container" style={{ maxWidth: '950px', margin: '0 auto' }}>
            <div className="step-card" style={{ padding: '30px', position: 'relative' }}>
                {/* Location indicator */}
                {userLocation && !locationLoading && (
                    <div style={{
                        position: 'absolute',
                        top: '10px',
                        right: '10px',
                        background: 'rgba(143, 188, 143, 0.1)',
                        padding: '5px 10px',
                        borderRadius: '15px',
                        fontSize: '12px',
                        color: '#2d5016',
                        border: '1px solid rgba(143, 188, 143, 0.3)'
                    }}>
                        üìç {userLocation.country} ({userLocation.measurementSystem === 'imperial' ? 'Imperial' : 'Metric'})
                    </div>
                )}

                <h1 style={{ marginBottom: '20px', textAlign: 'center' }}>
                    {t.pageTitle}
                </h1>
                
                {/* Location-based welcome message */}
                {!locationLoading && getLocationWelcomeMessage(t.locationWelcome) && (
                    <div style={{
                        marginBottom: '20px',
                        padding: '15px',
                        background: `rgba(143, 188, 143, 0.1)`,
                        borderRadius: '10px',
                        textAlign: 'center',
                        border: '1px solid rgba(143, 188, 143, 0.2)'
                    }}>
                        <p style={{ margin: '0', color: '#2d5016' }}>
                            {getLocationWelcomeMessage(t.locationWelcome)}
                        </p>
                    </div>
                )}

                <p style={{ marginBottom: '30px', fontSize: '18px', textAlign: 'center' }}>
                    {t.pageDescription}
                </p>
                
                {/* Search and Navigation Section */}
                <div style={{ 
                    marginBottom: '40px', 
                    padding: '25px', 
                    background: 'rgba(143, 188, 143, 0.05)',
                    borderRadius: '15px',
                    border: '1px solid rgba(143, 188, 143, 0.2)'
                }}>
                    <h3 style={{ color: '#2d5016', marginBottom: '20px', textAlign: 'center' }}>
                        {t.findRecipe}
                    </h3>
                    
                    {/* Search Bar */}
                    <div style={{ marginBottom: '25px' }}>
                        <input
                            type="text"
                            placeholder={t.searchPlaceholder}
                            value={searchTerm}
                            onChange={(e) => setSearchTerm(e.target.value)}
                            style={{
                                width: '100%',
                                padding: '12px 20px',
                                fontSize: '16px',
                                border: '2px solid rgba(143, 188, 143, 0.3)',
                                borderRadius: '25px',
                                outline: 'none',
                                background: 'rgba(255, 255, 255, 0.8)',
                                color: '#2d5016',
                                transition: 'border-color 0.3s ease'
                            }}
                            onFocus={(e) => e.target.style.borderColor = '#8fbc8f'}
                            onBlur={(e) => e.target.style.borderColor = 'rgba(143, 188, 143, 0.3)'}
                        />
                    </div>
                    
                    {/* Recipe Navigation Grid */}
                    <div style={{ marginTop: '20px' }}>
                        <h4 style={{ color: '#2d5016', marginBottom: '15px', textAlign: 'center' }}>
                            {t.quickJump}
                        </h4>
                        <div style={{
                            display: 'grid',
                            gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
                            gap: '15px'
                        }}>
                            {filteredRecipes.map((recipe) => (
                                <div
                                    key={recipe.id}
                                    onClick={() => scrollToRecipe(recipe.ref)}
                                    style={{
                                        background: 'rgba(143, 188, 143, 0.1)',
                                        padding: '15px',
                                        borderRadius: '12px',
                                        border: '1px solid rgba(143, 188, 143, 0.3)',
                                        cursor: 'pointer',
                                        transition: 'all 0.3s ease',
                                        display: 'flex',
                                        alignItems: 'center',
                                        gap: '12px'
                                    }}
                                    onMouseEnter={(e) => {
                                        e.currentTarget.style.background = 'rgba(143, 188, 143, 0.2)';
                                        e.currentTarget.style.transform = 'translateY(-2px)';
                                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(143, 188, 143, 0.3)';
                                    }}
                                    onMouseLeave={(e) => {
                                        e.currentTarget.style.background = 'rgba(143, 188, 143, 0.1)';
                                        e.currentTarget.style.transform = 'translateY(0)';
                                        e.currentTarget.style.boxShadow = 'none';
                                    }}
                                >
                                    <span style={{ fontSize: '24px', minWidth: '30px' }}>{recipe.icon}</span>
                                    <div style={{ flex: 1 }}>
                                        <strong style={{ color: '#2d5016', display: 'block', marginBottom: '5px' }}>
                                            {recipe.title}
                                        </strong>
                                        <p style={{ 
                                            fontSize: '14px', 
                                            margin: '0', 
                                            color: '#4a6741',
                                            lineHeight: '1.4'
                                        }}>
                                            {recipe.description}
                                        </p>
                                    </div>
                                    <span style={{ 
                                        color: '#8fbc8f', 
                                        fontSize: '18px',
                                        opacity: 0.7
                                    }}>
                                        ‚Üì
                                    </span>
                                </div>
                            ))}
                        </div>
                        
                        {filteredRecipes.length === 0 && searchTerm && (
                            <div style={{ 
                                textAlign: 'center', 
                                padding: '20px',
                                color: '#4a6741',
                                fontStyle: 'italic'
                            }}>
                                {t.noRecipesFound} "{searchTerm}". {t.searchSuggestion}
                            </div>
                        )}
                    </div>
                </div>
                
                <div className="recipes-container">
                    <div ref={burnRecipeRef}> 
                        <RecipeComponents.Burn onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={beeStingRecipeRef}>
                        <RecipeComponents.BeeStings onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={musclePainRecipeRef}>
                        <RecipeComponents.MusclePain onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={sprainsRecipeRef}>
                        <RecipeComponents.Sprains onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={nauseaRecipeRef}>
                        <RecipeComponents.Nausea onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={chestCongestionRecipeRef}>
                        <RecipeComponents.ChestCongestion onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={coldSoresRecipeRef}>
                        <RecipeComponents.ColdSores onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={headacheRecipeRef}>
                        <RecipeComponents.Headache onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={jetLagHangoverRecipeRef}>
                        <RecipeComponents.JetLagHangover onAddToCart={handleAddToCart} />
                    </div>
                    <div ref={pineColdFluRecipeRef}>
                        <RecipeComponents.PineColdFlu onAddToCart={handleAddToCart} />
                    </div>
                </div>
                
                <div style={{ 
                    textAlign: 'center', 
                    marginTop: '40px', 
                    padding: '25px',
                    background: 'rgba(143, 188, 143, 0.1)',
                    borderRadius: '15px'
                }}>
                    <h3 style={{ color: '#2d5016', marginBottom: '15px' }}>
                        {t.recipesAvailable}
                    </h3>
                    <p style={{ color: '#4a6741', marginBottom: '20px' }}>
                        {t.recipesDescription}
                    </p>
                    
                    <div style={{ marginTop: '20px' }}>
                        <h4 style={{ color: '#2d5016', marginBottom: '15px' }}>{t.currentCollection}</h4>
                        <div style={{ 
                            display: 'grid', 
                            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                            gap: '15px',
                            marginTop: '15px'
                        }}>
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>üî• {t.recipes.burn.title.split(' ').slice(0, 2).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.burn.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>üêù {t.recipes.beeStings.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.beeStings.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>üí™ {t.recipes.musclePain.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.musclePain.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>ü§ï {t.recipes.sprains.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.sprains.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>ü§¢ {t.recipes.nausea.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.nausea.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>ü´Å {t.recipes.chestCongestion.title.split(' ').slice(0, 2).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.chestCongestion.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>üíã {t.recipes.coldSores.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.coldSores.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>ü§ï {t.recipes.headache.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.headache.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>‚úàÔ∏è {t.recipes.jetLag.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.jetLag.shortDesc}
                                </p>
                            </div>
                            
                            <div style={{ 
                                background: 'rgba(143, 188, 143, 0.2)', 
                                padding: '15px', 
                                borderRadius: '12px',
                                border: '1px solid rgba(143, 188, 143, 0.3)'
                            }}>
                                <strong style={{ color: '#2d5016' }}>üå≤ {t.recipes.pineCold.title.split(' ').slice(0, 3).join(' ')}</strong>
                                <p style={{ fontSize: '14px', margin: '5px 0 0 0', color: '#4a6741' }}>
                                    {t.recipes.pineCold.shortDesc}
                                </p>
                            </div>
                        </div>
                        
                        <div style={{ marginTop: '25px', padding: '15px', background: 'rgba(255, 255, 255, 0.4)', borderRadius: '10px' }}>
                            <h4 style={{ color: '#2d5016', marginBottom: '10px' }}>{t.recipeFeatures}</h4>
                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', justifyContent: 'center' }}>
                                <span style={{ background: 'rgba(143, 188, 143, 0.3)', padding: '5px 12px', borderRadius: '20px', fontSize: '14px', color: '#2d5016' }}>
                                    {t.unitConversion}
                                </span>
                                <span style={{ background: 'rgba(143, 188, 143, 0.3)', padding: '5px 12px', borderRadius: '20px', fontSize: '14px', color: '#2d5016' }}>
                                    {t.shoppingIntegration}
                                </span>
                                <span style={{ background: 'rgba(143, 188, 143, 0.3)', padding: '5px 12px', borderRadius: '20px', fontSize: '14px', color: '#2d5016' }}>
                                    {t.academicSources}
                                </span>
                                <span style={{ background: 'rgba(143, 188, 143, 0.3)', padding: '5px 12px', borderRadius: '20px', fontSize: '14px', color: '#2d5016' }}>
                                    {t.safetyGuidelines}
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div style={{ 
                    marginTop: '30px', 
                    padding: '20px',
                    background: 'rgba(255, 255, 255, 0.6)',
                    borderRadius: '10px',
                    borderTop: '3px solid #8fbc8f'
                }}>
                    <h4 style={{ color: '#2d5016', marginBottom: '10px', fontSize: '16px' }}>{t.safetyNote}</h4>
                    <p style={{ 
                        color: '#4a6741', 
                        fontSize: '14px', 
                        margin: '0',
                        lineHeight: '1.6'
                    }}>
                        <strong>Important:</strong> {t.safetyText}
                    </p>
                </div>
            </div>
            
            <ScrollToTop />
        </div>
    );
}

export default TreatHealthIssuesEssentialOils;